"""
This type stub file was generated by pyright.
"""

from .Interfaces import SequenceIterator, SequenceWriter

"""Bio.SeqIO support for the "xdna" file format.

The Xdna binary format is generated by Christian Marck's DNA Strider program
and also used by Serial Cloner.
"""
_seq_types = ...
_seq_topologies = ...
class XdnaIterator(SequenceIterator):
    """Parser for Xdna files."""
    def __init__(self, source) -> None:
        """Parse a Xdna file and return a SeqRecord object.

        Argument source is a file-like object in binary mode or a path to a file.

        Note that this is an "iterator" in name only since an Xdna file always
        contain a single sequence.

        """
        ...
    
    def parse(self, handle): # -> Generator[SeqRecord, None, None]:
        """Start parsing the file, and return a SeqRecord generator."""
        ...
    
    def iterate(self, handle, header): # -> Generator[SeqRecord, None, None]:
        """Parse the file and generate SeqRecord objects."""
        ...
    


class XdnaWriter(SequenceWriter):
    """Write files in the Xdna format."""
    def __init__(self, target) -> None:
        """Initialize an Xdna writer object.

        Arguments:
         - target - Output stream opened in binary mode, or a path to a file.

        """
        ...
    
    def write_file(self, records):
        """Write the specified record to a Xdna file.

        Note that the function expects a list (or iterable) of records
        as per the SequenceWriter interface, but the list should contain
        only one record as the Xdna format is a mono-record format.
        """
        ...
    


