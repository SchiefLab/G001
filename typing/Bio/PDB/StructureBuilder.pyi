"""
This type stub file was generated by pyright.
"""

"""Consumer class that builds a Structure object.

This is used by the PDBParser and MMCIFparser classes.
"""
class StructureBuilder:
    """Deals with constructing the Structure object.

    The StructureBuilder class is used by the PDBParser classes to
    translate a file to a Structure object.
    """
    def __init__(self) -> None:
        """Initialize the class."""
        ...
    
    def set_header(self, header): # -> None:
        """Set header."""
        ...
    
    def set_line_counter(self, line_counter): # -> None:
        """Tracks line in the PDB file that is being parsed.

        Arguments:
         - line_counter - int

        """
        ...
    
    def init_structure(self, structure_id): # -> None:
        """Initialize a new Structure object with given id.

        Arguments:
         - id - string

        """
        ...
    
    def init_model(self, model_id, serial_num=...): # -> None:
        """Create a new Model object with given id.

        Arguments:
         - id - int
         - serial_num - int

        """
        ...
    
    def init_chain(self, chain_id): # -> None:
        """Create a new Chain object with given id.

        Arguments:
         - chain_id - string

        """
        ...
    
    def init_seg(self, segid): # -> None:
        """Flag a change in segid.

        Arguments:
         - segid - string

        """
        ...
    
    def init_residue(self, resname, field, resseq, icode):
        """Create a new Residue object.

        Arguments:
         - resname - string, e.g. "ASN"
         - field - hetero flag, "W" for waters, "H" for
           hetero residues, otherwise blank.
         - resseq - int, sequence identifier
         - icode - string, insertion code

        """
        ...
    
    def init_atom(self, name, coord, b_factor, occupancy, altloc, fullname, serial_number=..., element=..., pqr_charge=..., radius=..., is_pqr=...):
        """Create a new Atom object.

        Arguments:
         - name - string, atom name, e.g. CA, spaces should be stripped
         - coord - Numeric array (Float0, size 3), atomic coordinates
         - b_factor - float, B factor
         - occupancy - float
         - altloc - string, alternative location specifier
         - fullname - string, atom name including spaces, e.g. " CA "
         - element - string, upper case, e.g. "HG" for mercury
         - pqr_charge - float, atom charge (PQR format)
         - radius - float, atom radius (PQR format)
         - is_pqr - boolean, flag to specify if a .pqr file is being parsed

        """
        ...
    
    def set_anisou(self, anisou_array): # -> None:
        """Set anisotropic B factor of current Atom."""
        ...
    
    def set_siguij(self, siguij_array): # -> None:
        """Set standard deviation of anisotropic B factor of current Atom."""
        ...
    
    def set_sigatm(self, sigatm_array): # -> None:
        """Set standard deviation of atom position of current Atom."""
        ...
    
    def get_structure(self): # -> Structure:
        """Return the structure."""
        ...
    
    def set_symmetry(self, spacegroup, cell): # -> None:
        """Set symmetry."""
        ...
    


